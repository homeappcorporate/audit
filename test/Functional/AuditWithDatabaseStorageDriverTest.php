<?php

declare(strict_types=1);

namespace Functional;

use Doctrine\ORM\Events;
use Doctrine\ORM\EntityManager;
use Homeapp\AuditBundle\ActivityData;
use Homeapp\AuditBundle\Audit;
use Homeapp\AuditBundle\DatabaseStorage;
use Homeapp\AuditBundle\Entity\Activity;
use Homeapp\AuditBundle\EventListener;
use Test\Infra\Doctrine;
use Test\Infra\Entities\SomeEntity;
use Test\Infra\Faker;
use Test\Infra\Logger;
use PHPUnit\Framework\TestCase;

/**
 * @covers Audit
 */
final class AuditWithDatabaseStorageDriverTest extends TestCase
{
    private Audit $audit;
    private EntityManager $em;
    private Logger $logger;
    private Faker $faker;

    protected function setUp() : void
    {
        $doctrine = new Doctrine();
        $this->em = $doctrine->getEM();
        $this->logger = new Logger();
        $this->faker = faker();
        $this->audit = new Audit(
            new DatabaseStorage(
                $this->em,
                $this->logger
            )
        );
        $this->em->getEventManager()->addEventListener(
            Events::preFlush,
            new EventListener($this->audit)
        );
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Doctrine\ORM\ORMException
     */
    public function testPersistWhoCreatedEntity():void
    {
        $entity = new SomeEntity($this->faker->uuid());
        $userID = $this->faker->randomNumber();
        $ip = $this->faker->ipv4();
        $this->audit->hold(
            new ActivityData(SomeEntity::class, $entity->getId(), $userID, $ip, ['id']),
        );
        $this->em->persist($entity);
        $this->em->flush();
        $this->em->clear();

        self::assertSame(
            1,
            $this->em->getRepository(Activity::class)->count(['entityName' => SomeEntity::class])
        );

    }
}
